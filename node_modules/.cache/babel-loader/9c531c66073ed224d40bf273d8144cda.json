{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/djay/Developer/GitHub/Burger-Builder/src/containers/BurgerBuilder/BurgerBuilder.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport \"./BurgerBuilder.css\";\nimport { Dialog, Button, DialogTitle, DialogContent, DialogContentText, DialogActions } from \"@material-ui/core\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport Burger from \"../../components/Burger/Burger\";\nimport BurgerControls from \"../BurgerControls/BurgerControls\";\nimport axios from \"../../axios-orders\";\n\nconst BurgerBuilder = () => {\n  _s();\n\n  const [lettuce, setLettuce] = useState(false);\n  const [cheese, setCheese] = useState(false);\n  const [meat, setMeat] = useState(false);\n  const [lettucePrice, setLettucePrice] = useState(0);\n  const [cheesePrice, setCheesePrice] = useState(0);\n  const [meatPrice, setMeatPrice] = useState(0);\n  const [loading, setLoading] = useState(false);\n  const [success, setSuccess] = useState(false);\n  const [failure, setFailure] = useState(false);\n  const ingrediants = {\n    lettuce,\n    cheese,\n    meat\n  };\n\n  const changeLettuce = () => setLettuce(!lettuce);\n\n  const changeCheese = () => setCheese(!cheese);\n\n  const changeMeat = () => setMeat(!meat);\n\n  const handleClose = () => {\n    setLoading(false);\n    setSuccess(false);\n    setFailure(false);\n  };\n\n  const handleCheckout = (orderString, price) => {\n    setLoading(true);\n    const order = {\n      ingrediants: ingrediants,\n      orderString: orderString,\n      price: price,\n      customer: {\n        name: \"Dhananjayan P N\",\n        address: {\n          house: \"NCC Urban Green Province\",\n          street: \"Sarjapur Road\",\n          pinCode: \"562125\",\n          country: \"India\"\n        },\n        email: \"pndjay@gmail.com\"\n      },\n      deliveryMethod: \"regular\"\n    };\n    axios.post(\"/orders.json\", order).then(response => {\n      setLoading(false);\n\n      if (response.status === 200) {\n        setSuccess(true);\n      } else {\n        console.log(response);\n        setFailure(true);\n      }\n    }).catch(error => {\n      setLoading(false);\n      console.log(error);\n      setFailure(true);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"BurgerBuilder\",\n    children: [/*#__PURE__*/_jsxDEV(Burger, { ...ingrediants\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(BurgerControls, { ...ingrediants,\n      prices: {\n        lettucePrice,\n        cheesePrice,\n        meatPrice\n      },\n      checkout: handleCheckout,\n      changeLettuce: changeLettuce,\n      changeCheese: changeCheese,\n      changeMeat: changeMeat\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n      open: loading,\n      children: /*#__PURE__*/_jsxDEV(CircularProgress, {\n        style: {\n          padding: \"50px\"\n        },\n        color: \"secondary\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n      open: success,\n      onClose: handleClose,\n      children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n        id: \"responsive-dialog-title\",\n        children: \"Order Placed\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n        children: /*#__PURE__*/_jsxDEV(DialogContentText, {\n          children: \"Your order was successfully placed! Bon Apetit!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          autoFocus: true,\n          onClick: handleClose,\n          color: \"secondary\",\n          children: \"Ok\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n      open: failure,\n      onClose: handleClose,\n      children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n        id: \"responsive-dialog-title\",\n        children: \"Error\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n        children: /*#__PURE__*/_jsxDEV(DialogContentText, {\n          children: \"Somthing went wrong! Try again later\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          autoFocus: true,\n          onClick: handleClose,\n          color: \"secondary\",\n          children: \"Ok\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 5\n  }, this);\n};\n\n_s(BurgerBuilder, \"+diK+479aMMXLYSq/73/FihFrws=\");\n\n_c = BurgerBuilder;\nexport default BurgerBuilder;\n\nvar _c;\n\n$RefreshReg$(_c, \"BurgerBuilder\");","map":{"version":3,"sources":["/Users/djay/Developer/GitHub/Burger-Builder/src/containers/BurgerBuilder/BurgerBuilder.js"],"names":["React","useState","Dialog","Button","DialogTitle","DialogContent","DialogContentText","DialogActions","CircularProgress","Burger","BurgerControls","axios","BurgerBuilder","lettuce","setLettuce","cheese","setCheese","meat","setMeat","lettucePrice","setLettucePrice","cheesePrice","setCheesePrice","meatPrice","setMeatPrice","loading","setLoading","success","setSuccess","failure","setFailure","ingrediants","changeLettuce","changeCheese","changeMeat","handleClose","handleCheckout","orderString","price","order","customer","name","address","house","street","pinCode","country","email","deliveryMethod","post","then","response","status","console","log","catch","error","padding"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport \"./BurgerBuilder.css\";\nimport { Dialog, Button, DialogTitle, DialogContent, DialogContentText, DialogActions } from \"@material-ui/core\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport Burger from \"../../components/Burger/Burger\";\nimport BurgerControls from \"../BurgerControls/BurgerControls\";\nimport axios from \"../../axios-orders\";\n\nconst BurgerBuilder = () => {\n  const [lettuce, setLettuce] = useState(false);\n  const [cheese, setCheese] = useState(false);\n  const [meat, setMeat] = useState(false);\n  const [lettucePrice, setLettucePrice] = useState(0);\n  const [cheesePrice, setCheesePrice] = useState(0);\n  const [meatPrice, setMeatPrice] = useState(0);\n  const [loading, setLoading] = useState(false);\n  const [success, setSuccess] = useState(false);\n  const [failure, setFailure] = useState(false);\n  const ingrediants = { lettuce, cheese, meat };\n\n  const changeLettuce = () => setLettuce(!lettuce);\n  const changeCheese = () => setCheese(!cheese);\n  const changeMeat = () => setMeat(!meat);\n\n  const handleClose = () => {\n    setLoading(false);\n    setSuccess(false);\n    setFailure(false);\n  };\n\n  const handleCheckout = (orderString, price) => {\n    setLoading(true);\n    const order = {\n      ingrediants: ingrediants,\n      orderString: orderString,\n      price: price,\n      customer: {\n        name: \"Dhananjayan P N\",\n        address: {\n          house: \"NCC Urban Green Province\",\n          street: \"Sarjapur Road\",\n          pinCode: \"562125\",\n          country: \"India\"\n        },\n        email: \"pndjay@gmail.com\"\n      },\n      deliveryMethod: \"regular\"\n    };\n    axios\n      .post(\"/orders.json\", order)\n      .then((response) => {\n        setLoading(false);\n        if (response.status === 200) {\n          setSuccess(true);\n        } else {\n          console.log(response);\n          setFailure(true);\n        }\n      })\n      .catch((error) => {\n        setLoading(false);\n        console.log(error);\n        setFailure(true);\n      });\n  };\n\n  return (\n    <div className=\"BurgerBuilder\">\n      <Burger {...ingrediants} />\n      <BurgerControls\n        {...ingrediants}\n        prices={{ lettucePrice, cheesePrice, meatPrice }}\n        checkout={handleCheckout}\n        changeLettuce={changeLettuce}\n        changeCheese={changeCheese}\n        changeMeat={changeMeat}\n      />\n      <Dialog open={loading}>\n        <CircularProgress style={{ padding: \"50px\" }} color=\"secondary\" />\n      </Dialog>\n      <Dialog open={success} onClose={handleClose}>\n        <DialogTitle id=\"responsive-dialog-title\">Order Placed</DialogTitle>\n        <DialogContent>\n          <DialogContentText>Your order was successfully placed! Bon Apetit!</DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button autoFocus onClick={handleClose} color=\"secondary\">\n            Ok\n          </Button>\n        </DialogActions>\n      </Dialog>\n      <Dialog open={failure} onClose={handleClose}>\n        <DialogTitle id=\"responsive-dialog-title\">Error</DialogTitle>\n        <DialogContent>\n          <DialogContentText>Somthing went wrong! Try again later</DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button autoFocus onClick={handleClose} color=\"secondary\">\n            Ok\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n};\n\nexport default BurgerBuilder;\n"]},"metadata":{},"sourceType":"module"}