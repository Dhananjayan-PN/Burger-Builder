{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/djay/Developer/GitHub/Burger-Builder/src/containers/Orders/Orders.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport Order from \"../../components/Order/Order\";\nimport axios from \"../../axios-orders\";\nimport \"./Orders.css\";\n\nconst Orders = props => {\n  _s();\n\n  const [orders, setOrders] = useState(null);\n  const [loading, setLoading] = useState(false);\n  useEffect(() => {\n    setLoading(true);\n    axios.get(\"/ingrediant-costs.json\").then(response => {\n      if (response.status === 200) {\n        setLettucePrice(response.data.lettuce);\n        setCheesePrice(response.data.cheese);\n        setMeatPrice(response.data.meat);\n      }\n    });\n    setLoading(false);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Orders\",\n    children: [/*#__PURE__*/_jsxDEV(Order, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Order, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Order, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n      open: loading,\n      children: /*#__PURE__*/_jsxDEV(CircularProgress, {\n        style: {\n          padding: \"50px\"\n        },\n        color: \"secondary\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Orders, \"5mpEXjCqjhMHMf0+Ja/x5Jn8CQA=\");\n\n_c = Orders;\nexport default Orders;\n\nvar _c;\n\n$RefreshReg$(_c, \"Orders\");","map":{"version":3,"sources":["/Users/djay/Developer/GitHub/Burger-Builder/src/containers/Orders/Orders.js"],"names":["React","useState","useEffect","Order","axios","Orders","props","orders","setOrders","loading","setLoading","get","then","response","status","setLettucePrice","data","lettuce","setCheesePrice","cheese","setMeatPrice","meat","padding"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,8BAAlB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,OAAO,cAAP;;AAEA,MAAMC,MAAM,GAAIC,KAAD,IAAW;AAAA;;AACxB,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBP,QAAQ,CAAC,IAAD,CAApC;AACA,QAAM,CAACQ,OAAD,EAAUC,UAAV,IAAwBT,QAAQ,CAAC,KAAD,CAAtC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACdQ,IAAAA,UAAU,CAAC,IAAD,CAAV;AACAN,IAAAA,KAAK,CAACO,GAAN,CAAU,wBAAV,EAAoCC,IAApC,CAA0CC,QAAD,IAAc;AACrD,UAAIA,QAAQ,CAACC,MAAT,KAAoB,GAAxB,EAA6B;AAC3BC,QAAAA,eAAe,CAACF,QAAQ,CAACG,IAAT,CAAcC,OAAf,CAAf;AACAC,QAAAA,cAAc,CAACL,QAAQ,CAACG,IAAT,CAAcG,MAAf,CAAd;AACAC,QAAAA,YAAY,CAACP,QAAQ,CAACG,IAAT,CAAcK,IAAf,CAAZ;AACD;AACF,KAND;AAOAX,IAAAA,UAAU,CAAC,KAAD,CAAV;AACD,GAVQ,EAUN,EAVM,CAAT;AAYA,sBACE;AAAK,IAAA,SAAS,EAAC,QAAf;AAAA,4BACE,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA,YAHF,eAIE,QAAC,MAAD;AAAQ,MAAA,IAAI,EAAED,OAAd;AAAA,6BACE,QAAC,gBAAD;AAAkB,QAAA,KAAK,EAAE;AAAEa,UAAAA,OAAO,EAAE;AAAX,SAAzB;AAA8C,QAAA,KAAK,EAAC;AAApD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAJF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAUD,CA1BD;;GAAMjB,M;;KAAAA,M;AA4BN,eAAeA,MAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport Order from \"../../components/Order/Order\";\nimport axios from \"../../axios-orders\";\nimport \"./Orders.css\";\n\nconst Orders = (props) => {\n  const [orders, setOrders] = useState(null);\n  const [loading, setLoading] = useState(false);\n\n  useEffect(() => {\n    setLoading(true);\n    axios.get(\"/ingrediant-costs.json\").then((response) => {\n      if (response.status === 200) {\n        setLettucePrice(response.data.lettuce);\n        setCheesePrice(response.data.cheese);\n        setMeatPrice(response.data.meat);\n      }\n    });\n    setLoading(false);\n  }, []);\n\n  return (\n    <div className=\"Orders\">\n      <Order />\n      <Order />\n      <Order />\n      <Dialog open={loading}>\n        <CircularProgress style={{ padding: \"50px\" }} color=\"secondary\" />\n      </Dialog>\n    </div>\n  );\n};\n\nexport default Orders;\n"]},"metadata":{},"sourceType":"module"}