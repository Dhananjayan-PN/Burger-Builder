{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/djay/Developer/GitHub/Burger-Builder/src/containers/Orders/Orders.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport Order from \"../../components/Order/Order\";\nimport axios from \"../../axios-orders\";\nimport { Dialog } from \"@material-ui/core\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport \"./Orders.css\";\n\nconst Orders = props => {\n  _s();\n\n  const [orders, setOrders] = useState(null);\n  const [loading, setLoading] = useState(false);\n  useEffect(() => {\n    setLoading(true);\n    axios.get(\"/orders.json\").then(response => {\n      if (response.status === 200) {\n        setOrders(response.data);\n      }\n    });\n    setLoading(false);\n  }, []);\n\n  const renderOrders = () => {\n    return Object.keys(orders).map(key => /*#__PURE__*/_jsxDEV(Order, { ...orders[key]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 45\n    }, this));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Orders\",\n    children: [orders === null ? null : renderOrders(), /*#__PURE__*/_jsxDEV(Dialog, {\n      open: loading,\n      children: /*#__PURE__*/_jsxDEV(CircularProgress, {\n        style: {\n          padding: \"50px\"\n        },\n        color: \"secondary\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Orders, \"5mpEXjCqjhMHMf0+Ja/x5Jn8CQA=\");\n\n_c = Orders;\nexport default Orders;\n\nvar _c;\n\n$RefreshReg$(_c, \"Orders\");","map":{"version":3,"sources":["/Users/djay/Developer/GitHub/Burger-Builder/src/containers/Orders/Orders.js"],"names":["React","useState","useEffect","Order","axios","Dialog","CircularProgress","Orders","props","orders","setOrders","loading","setLoading","get","then","response","status","data","renderOrders","Object","keys","map","key","padding"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,8BAAlB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,SAASC,MAAT,QAAuB,mBAAvB;AACA,OAAOC,gBAAP,MAA6B,oCAA7B;AACA,OAAO,cAAP;;AAEA,MAAMC,MAAM,GAAIC,KAAD,IAAW;AAAA;;AACxB,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBT,QAAQ,CAAC,IAAD,CAApC;AACA,QAAM,CAACU,OAAD,EAAUC,UAAV,IAAwBX,QAAQ,CAAC,KAAD,CAAtC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACdU,IAAAA,UAAU,CAAC,IAAD,CAAV;AACAR,IAAAA,KAAK,CAACS,GAAN,CAAU,cAAV,EAA0BC,IAA1B,CAAgCC,QAAD,IAAc;AAC3C,UAAIA,QAAQ,CAACC,MAAT,KAAoB,GAAxB,EAA6B;AAC3BN,QAAAA,SAAS,CAACK,QAAQ,CAACE,IAAV,CAAT;AACD;AACF,KAJD;AAKAL,IAAAA,UAAU,CAAC,KAAD,CAAV;AACD,GARQ,EAQN,EARM,CAAT;;AAUA,QAAMM,YAAY,GAAG,MAAM;AACzB,WAAOC,MAAM,CAACC,IAAP,CAAYX,MAAZ,EAAoBY,GAApB,CAAyBC,GAAD,iBAAS,QAAC,KAAD,OAAWb,MAAM,CAACa,GAAD;AAAjB;AAAA;AAAA;AAAA;AAAA,YAAjC,CAAP;AACD,GAFD;;AAIA,sBACE;AAAK,IAAA,SAAS,EAAC,QAAf;AAAA,eACGb,MAAM,KAAK,IAAX,GAAkB,IAAlB,GAAyBS,YAAY,EADxC,eAEE,QAAC,MAAD;AAAQ,MAAA,IAAI,EAAEP,OAAd;AAAA,6BACE,QAAC,gBAAD;AAAkB,QAAA,KAAK,EAAE;AAAEY,UAAAA,OAAO,EAAE;AAAX,SAAzB;AAA8C,QAAA,KAAK,EAAC;AAApD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAQD,CA1BD;;GAAMhB,M;;KAAAA,M;AA4BN,eAAeA,MAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport Order from \"../../components/Order/Order\";\nimport axios from \"../../axios-orders\";\nimport { Dialog } from \"@material-ui/core\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport \"./Orders.css\";\n\nconst Orders = (props) => {\n  const [orders, setOrders] = useState(null);\n  const [loading, setLoading] = useState(false);\n\n  useEffect(() => {\n    setLoading(true);\n    axios.get(\"/orders.json\").then((response) => {\n      if (response.status === 200) {\n        setOrders(response.data);\n      }\n    });\n    setLoading(false);\n  }, []);\n\n  const renderOrders = () => {\n    return Object.keys(orders).map((key) => <Order {...orders[key]} />);\n  };\n\n  return (\n    <div className=\"Orders\">\n      {orders === null ? null : renderOrders()}\n      <Dialog open={loading}>\n        <CircularProgress style={{ padding: \"50px\" }} color=\"secondary\" />\n      </Dialog>\n    </div>\n  );\n};\n\nexport default Orders;\n"]},"metadata":{},"sourceType":"module"}