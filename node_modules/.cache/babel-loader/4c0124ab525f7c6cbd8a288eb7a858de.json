{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/djay/Developer/GitHub/Burger-Builder/src/containers/BurgerBuilder/BurgerBuilder.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport \"./BurgerBuilder.css\";\nimport { Dialog, Button, DialogTitle, DialogContent, DialogContentText, DialogActions } from \"@material-ui/core\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport Burger from \"../../components/Burger/Burger\";\nimport BurgerControls from \"../BurgerControls/BurgerControls\";\nimport axios from \"../../axios-orders\";\n\nconst BurgerBuilder = () => {\n  _s();\n\n  const [lettuce, setLettuce] = useState(false);\n  const [cheese, setCheese] = useState(false);\n  const [meat, setMeat] = useState(false);\n  const [lettucePrice, setLettucePrice] = useState(0);\n  const [cheesePrice, setCheesePrice] = useState(0);\n  const [meatPrice, setMeatPrice] = useState(0);\n  const [loading, setLoading] = useState(false);\n  const ingrediants = {\n    lettuce,\n    cheese,\n    meat\n  };\n  useEffect(() => {\n    setLoading(true);\n    axios.get(\"/ingrediant-costs.json\").then(response => {\n      if (response.status === 200) {\n        setLettucePrice(response.data.lettuce);\n        setCheesePrice(response.data.cheese);\n        setMeatPrice(response.data.meat);\n      }\n    });\n    setLoading(false);\n  }, []);\n\n  const changeLettuce = () => setLettuce(!lettuce);\n\n  const changeCheese = () => setCheese(!cheese);\n\n  const changeMeat = () => setMeat(!meat);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"BurgerBuilder\",\n    children: [/*#__PURE__*/_jsxDEV(Burger, { ...ingrediants\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(BurgerControls, { ...ingrediants,\n      prices: {\n        lettucePrice,\n        cheesePrice,\n        meatPrice\n      },\n      changeLettuce: changeLettuce,\n      changeCheese: changeCheese,\n      changeMeat: changeMeat\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n      open: loading,\n      children: /*#__PURE__*/_jsxDEV(CircularProgress, {\n        style: {\n          padding: \"50px\"\n        },\n        color: \"secondary\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n};\n\n_s(BurgerBuilder, \"de2ko7WHQcbvpzmO96Qrr1XFtjg=\");\n\n_c = BurgerBuilder;\nexport default BurgerBuilder;\n\nvar _c;\n\n$RefreshReg$(_c, \"BurgerBuilder\");","map":{"version":3,"sources":["/Users/djay/Developer/GitHub/Burger-Builder/src/containers/BurgerBuilder/BurgerBuilder.js"],"names":["React","useState","useEffect","Dialog","Button","DialogTitle","DialogContent","DialogContentText","DialogActions","CircularProgress","Burger","BurgerControls","axios","BurgerBuilder","lettuce","setLettuce","cheese","setCheese","meat","setMeat","lettucePrice","setLettucePrice","cheesePrice","setCheesePrice","meatPrice","setMeatPrice","loading","setLoading","ingrediants","get","then","response","status","data","changeLettuce","changeCheese","changeMeat","padding"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAO,qBAAP;AACA,SAASC,MAAT,EAAiBC,MAAjB,EAAyBC,WAAzB,EAAsCC,aAAtC,EAAqDC,iBAArD,EAAwEC,aAAxE,QAA6F,mBAA7F;AACA,OAAOC,gBAAP,MAA6B,oCAA7B;AACA,OAAOC,MAAP,MAAmB,gCAAnB;AACA,OAAOC,cAAP,MAA2B,kCAA3B;AACA,OAAOC,KAAP,MAAkB,oBAAlB;;AAEA,MAAMC,aAAa,GAAG,MAAM;AAAA;;AAC1B,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBd,QAAQ,CAAC,KAAD,CAAtC;AACA,QAAM,CAACe,MAAD,EAASC,SAAT,IAAsBhB,QAAQ,CAAC,KAAD,CAApC;AACA,QAAM,CAACiB,IAAD,EAAOC,OAAP,IAAkBlB,QAAQ,CAAC,KAAD,CAAhC;AACA,QAAM,CAACmB,YAAD,EAAeC,eAAf,IAAkCpB,QAAQ,CAAC,CAAD,CAAhD;AACA,QAAM,CAACqB,WAAD,EAAcC,cAAd,IAAgCtB,QAAQ,CAAC,CAAD,CAA9C;AACA,QAAM,CAACuB,SAAD,EAAYC,YAAZ,IAA4BxB,QAAQ,CAAC,CAAD,CAA1C;AACA,QAAM,CAACyB,OAAD,EAAUC,UAAV,IAAwB1B,QAAQ,CAAC,KAAD,CAAtC;AACA,QAAM2B,WAAW,GAAG;AAAEd,IAAAA,OAAF;AAAWE,IAAAA,MAAX;AAAmBE,IAAAA;AAAnB,GAApB;AAEAhB,EAAAA,SAAS,CAAC,MAAM;AACdyB,IAAAA,UAAU,CAAC,IAAD,CAAV;AACAf,IAAAA,KAAK,CAACiB,GAAN,CAAU,wBAAV,EAAoCC,IAApC,CAA0CC,QAAD,IAAc;AACrD,UAAIA,QAAQ,CAACC,MAAT,KAAoB,GAAxB,EAA6B;AAC3BX,QAAAA,eAAe,CAACU,QAAQ,CAACE,IAAT,CAAcnB,OAAf,CAAf;AACAS,QAAAA,cAAc,CAACQ,QAAQ,CAACE,IAAT,CAAcjB,MAAf,CAAd;AACAS,QAAAA,YAAY,CAACM,QAAQ,CAACE,IAAT,CAAcf,IAAf,CAAZ;AACD;AACF,KAND;AAOAS,IAAAA,UAAU,CAAC,KAAD,CAAV;AACD,GAVQ,EAUN,EAVM,CAAT;;AAYA,QAAMO,aAAa,GAAG,MAAMnB,UAAU,CAAC,CAACD,OAAF,CAAtC;;AACA,QAAMqB,YAAY,GAAG,MAAMlB,SAAS,CAAC,CAACD,MAAF,CAApC;;AACA,QAAMoB,UAAU,GAAG,MAAMjB,OAAO,CAAC,CAACD,IAAF,CAAhC;;AAEA,sBACE;AAAK,IAAA,SAAS,EAAC,eAAf;AAAA,4BACE,QAAC,MAAD,OAAYU;AAAZ;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,cAAD,OACMA,WADN;AAEE,MAAA,MAAM,EAAE;AAAER,QAAAA,YAAF;AAAgBE,QAAAA,WAAhB;AAA6BE,QAAAA;AAA7B,OAFV;AAGE,MAAA,aAAa,EAAEU,aAHjB;AAIE,MAAA,YAAY,EAAEC,YAJhB;AAKE,MAAA,UAAU,EAAEC;AALd;AAAA;AAAA;AAAA;AAAA,YAFF,eASE,QAAC,MAAD;AAAQ,MAAA,IAAI,EAAEV,OAAd;AAAA,6BACE,QAAC,gBAAD;AAAkB,QAAA,KAAK,EAAE;AAAEW,UAAAA,OAAO,EAAE;AAAX,SAAzB;AAA8C,QAAA,KAAK,EAAC;AAApD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YATF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAeD,CAzCD;;GAAMxB,a;;KAAAA,a;AA2CN,eAAeA,aAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport \"./BurgerBuilder.css\";\nimport { Dialog, Button, DialogTitle, DialogContent, DialogContentText, DialogActions } from \"@material-ui/core\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport Burger from \"../../components/Burger/Burger\";\nimport BurgerControls from \"../BurgerControls/BurgerControls\";\nimport axios from \"../../axios-orders\";\n\nconst BurgerBuilder = () => {\n  const [lettuce, setLettuce] = useState(false);\n  const [cheese, setCheese] = useState(false);\n  const [meat, setMeat] = useState(false);\n  const [lettucePrice, setLettucePrice] = useState(0);\n  const [cheesePrice, setCheesePrice] = useState(0);\n  const [meatPrice, setMeatPrice] = useState(0);\n  const [loading, setLoading] = useState(false);\n  const ingrediants = { lettuce, cheese, meat };\n\n  useEffect(() => {\n    setLoading(true);\n    axios.get(\"/ingrediant-costs.json\").then((response) => {\n      if (response.status === 200) {\n        setLettucePrice(response.data.lettuce);\n        setCheesePrice(response.data.cheese);\n        setMeatPrice(response.data.meat);\n      }\n    });\n    setLoading(false);\n  }, []);\n\n  const changeLettuce = () => setLettuce(!lettuce);\n  const changeCheese = () => setCheese(!cheese);\n  const changeMeat = () => setMeat(!meat);\n\n  return (\n    <div className=\"BurgerBuilder\">\n      <Burger {...ingrediants} />\n      <BurgerControls\n        {...ingrediants}\n        prices={{ lettucePrice, cheesePrice, meatPrice }}\n        changeLettuce={changeLettuce}\n        changeCheese={changeCheese}\n        changeMeat={changeMeat}\n      />\n      <Dialog open={loading}>\n        <CircularProgress style={{ padding: \"50px\" }} color=\"secondary\" />\n      </Dialog>\n    </div>\n  );\n};\n\nexport default BurgerBuilder;\n"]},"metadata":{},"sourceType":"module"}