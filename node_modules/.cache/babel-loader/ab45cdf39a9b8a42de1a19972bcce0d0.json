{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/djay/Developer/GitHub/Burger-Builder/src/containers/BurgerBuilder/BurgerBuilder.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport \"./BurgerBuilder.css\";\nimport { Dialog } from \"@material-ui/core\";\nimport Burger from \"../../components/Burger/Burger\";\nimport BurgerControls from \"../BurgerControls/BurgerControls\";\nimport axios from \"../../axios-orders\";\n\nconst BurgerBuilder = () => {\n  _s();\n\n  const [lettuce, setLettuce] = useState(false);\n  const [cheese, setCheese] = useState(false);\n  const [meat, setMeat] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const ingrediants = {\n    lettuce,\n    cheese,\n    meat\n  };\n\n  const changeLettuce = () => setLettuce(!lettuce);\n\n  const changeCheese = () => setCheese(!cheese);\n\n  const changeMeat = () => setMeat(!meat);\n\n  const handleClose = () => {\n    setLoading(false);\n  };\n\n  const handleCheckout = (orderString, price) => {\n    setLoading(true);\n    const order = {\n      ingrediants: ingrediants,\n      orderString: orderString,\n      price: price,\n      customer: {\n        name: \"Dhananjayan P N\",\n        address: {\n          house: \"NCC Urban Green Province\",\n          street: \"Sarjapur Road\",\n          pinCode: \"562125\",\n          country: \"India\"\n        },\n        email: \"pndjay@gmail.com\"\n      },\n      deliveryMethod: \"regular\"\n    };\n    axios.post(\"/orders.json\", order).then(response => {\n      if (response.status === 200) {\n        alert(\"Order successfully placed!\");\n      } else {\n        console.log(response);\n        alert(\"Something went wrong! Order not placed!\");\n      }\n    }).catch(error => {\n      console.log(error);\n      alert(\"Something went wrong! Order not placed!\");\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"BurgerBuilder\",\n    children: [/*#__PURE__*/_jsxDEV(Burger, { ...ingrediants\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(BurgerControls, { ...ingrediants,\n      checkout: handleCheckout,\n      changeLettuce: changeLettuce,\n      changeCheese: changeCheese,\n      changeMeat: changeMeat\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n      open: loading,\n      onClose: handleClose\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n};\n\n_s(BurgerBuilder, \"ecY3l1eAWfk9QkkmN/cl5Bsq8yI=\");\n\n_c = BurgerBuilder;\nexport default BurgerBuilder;\n\nvar _c;\n\n$RefreshReg$(_c, \"BurgerBuilder\");","map":{"version":3,"sources":["/Users/djay/Developer/GitHub/Burger-Builder/src/containers/BurgerBuilder/BurgerBuilder.js"],"names":["React","useState","Dialog","Burger","BurgerControls","axios","BurgerBuilder","lettuce","setLettuce","cheese","setCheese","meat","setMeat","loading","setLoading","ingrediants","changeLettuce","changeCheese","changeMeat","handleClose","handleCheckout","orderString","price","order","customer","name","address","house","street","pinCode","country","email","deliveryMethod","post","then","response","status","alert","console","log","catch","error"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport \"./BurgerBuilder.css\";\nimport { Dialog } from \"@material-ui/core\";\nimport Burger from \"../../components/Burger/Burger\";\nimport BurgerControls from \"../BurgerControls/BurgerControls\";\nimport axios from \"../../axios-orders\";\n\nconst BurgerBuilder = () => {\n  const [lettuce, setLettuce] = useState(false);\n  const [cheese, setCheese] = useState(false);\n  const [meat, setMeat] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const ingrediants = { lettuce, cheese, meat };\n\n  const changeLettuce = () => setLettuce(!lettuce);\n  const changeCheese = () => setCheese(!cheese);\n  const changeMeat = () => setMeat(!meat);\n  const handleClose = () => {\n    setLoading(false);\n  };\n  const handleCheckout = (orderString, price) => {\n    setLoading(true);\n    const order = {\n      ingrediants: ingrediants,\n      orderString: orderString,\n      price: price,\n      customer: {\n        name: \"Dhananjayan P N\",\n        address: {\n          house: \"NCC Urban Green Province\",\n          street: \"Sarjapur Road\",\n          pinCode: \"562125\",\n          country: \"India\"\n        },\n        email: \"pndjay@gmail.com\"\n      },\n      deliveryMethod: \"regular\"\n    };\n    axios\n      .post(\"/orders.json\", order)\n      .then((response) => {\n        if (response.status === 200) {\n          alert(\"Order successfully placed!\");\n        } else {\n          console.log(response);\n          alert(\"Something went wrong! Order not placed!\");\n        }\n      })\n      .catch((error) => {\n        console.log(error);\n        alert(\"Something went wrong! Order not placed!\");\n      });\n  };\n\n  return (\n    <div className=\"BurgerBuilder\">\n      <Burger {...ingrediants} />\n      <BurgerControls {...ingrediants} checkout={handleCheckout} changeLettuce={changeLettuce} changeCheese={changeCheese} changeMeat={changeMeat} />\n      <Dialog open={loading} onClose={handleClose}></Dialog>\n    </div>\n  );\n};\n\nexport default BurgerBuilder;\n"]},"metadata":{},"sourceType":"module"}